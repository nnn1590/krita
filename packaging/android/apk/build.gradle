buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
    }
}

repositories {
    google()
    jcenter()
}

apply plugin: 'com.android.application'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

ext {
    abi = System.getenv('ANDROID_ABI')
    installPrefix = '../krita-android-build'
}

task configure() {
    doLast {
        if (abi == null && !project.hasProperty("abi")) {
            logger.error('ANDROID_ABI not specified using the default one instead: armeabi-v7a')
            abi = 'armeabi-v7a'
        }

        // if user specified the ABI through environment then overwrite the one in gradle.properties
        if (System.getenv('ANDROID_ABI') != null) {
            def f = file('gradle.properties')
            def lines = f.readLines()
            f.write("")
            for (line in lines) {
                if (line.matches('abi=.+'))
                    continue
                f.append("$line\n")
            }
            f.append("abi=${abi}\n")
        }

        def libs = new File(installPrefix, 'lib')
        if (!libs.exists()) {
            throw new GradleException('Krita libraires not found, please check if -p=krita-bin finished without errors')
        }
    }
}

// copy libs(plugins) which start with krita*.so and rename
// them to start with `lib_`
task copyLibs(type: Copy) {
    from "$installPrefix/lib"
    into "libs/${abi ?: 'armeabi-v7a'}"
    rename ('^krita(.*).so$', 'lib_krita$1.so')
}

/*
 * androiddeployqt doesn't fully copy the directories. Hidden directories
 * to be specific. That's why we copy manually and then delete the partial
 * one it creates
 */
task copyAssets(type: Copy) {
    from "$installPrefix/share/"
    into 'assets/'
    include '**'
}

/*
 * Remove "share" folder in assets. It is copied both manually and by
 * androiddeployqt(reason in copyAssets task).
 */
task removeDuplicateAssets(type: Delete) {
    delete "assets/share"
}

copyLibs.dependsOn configure

android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    compileSdkVersion androidCompileSdkVersion.toInteger()


    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs', 'lib']
       }
    }

    // This is needed because, gradle by default ignores hidden assets.
    aaptOptions {
        ignoreAssetsPattern "!.foajasoie"
    }

    lintOptions {
        abortOnError false
    }

    project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]

    def versionMajor    = 4
    def versionMinor    = 3

    /**
     * This version does **not** correspond to the patch version
     * of Krita. Instead, it is just incremented for every public
     * (including alpha and beta) release of versionMajor.versionMinor
     * branch
     */
    def versionRelease  = 0

	defaultConfig {
        targetSdkVersion 29
        minSdkVersion 23
        versionCode project.ext.versionCodes[abi] * 1000000 + versionMajor * 10000 + versionMinor * 100 + versionRelease
    }

    preBuild.dependsOn(copyLibs)
    preBuild.dependsOn(copyAssets)
    preBuild.dependsOn(removeDuplicateAssets)
}

dependencies {
    implementation 'com.android.billingclient:billing:2.2.0'
}

