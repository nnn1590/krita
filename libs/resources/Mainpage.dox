/**
  \mainpage Resources

  The Resources library provides cached access to resources. Resources are things
  like brush presets, brush tips or gradients. The following components play an
  important role in the library:

  - KisResourceModel: This model can be used to access resources without loading
    the actual resource until it is needed.

  - KisTagResourceModel: this model represents the intersection between tags and resources and
    can be used to tag and untag resources.

  - KisTagModel: this model represents tags. It can be used create tags and activate or deactivate
    tags.

  These three models are accessed through KisResourceModelProvider. The models themselves are
  proxy models that allow filtering by active or inactive state or the resource, tag or storage.

  - KisTagFilterResourceProxyModel. This model should be used in resource choosers. Under the
    hood it switches between KisResourceModel and KisTagResourceModel based on whether the
    widget is filtering by tag or not.

  - KisResourceLocator: KisResourceLocator should not be used outside of the resources library.
    Its task is to load the resources from the resource storages: resource storages are the
    resource folder, bundles, ASL or ABR files that contain a collection of resources. Once a
    resource is loaded, it's cached. Loading resources is handled through the KisResourceLoader
    classes, while finding resources in the storages is handled through the KisStoragePlugin
    implementations.

    All resources are captured in a QSharedPointer and should not be used naked.

    KisResourceLocator is also repsonsible for initializing the cache database.

  - KisResourceCacheDB: this class creates the sqlite database and handles synchronizing resources
    with the contents of storages.

 */

// DOXYGEN_SET_PROJECT_NAME = KritaResources
// DOXYGEN_SET_IGNORE_PREFIX = Kis Ko K
