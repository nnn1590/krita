From 7f99aec7447d3c21ada17b093f7956c6dbced641 Mon Sep 17 00:00:00 2001
From: "L. E. Segovia" <amy@amyspark.me>
Date: Wed, 11 Nov 2020 17:05:57 +0000
Subject: [PATCH 3/5] Refactor into a completely Krita native plugin

---
 CMakeLists.txt                             | 33 +++++++++++++++++-----
 src/Host/KritaPlugin/gmicqttoolplugin.cpp  |  9 ++++++
 src/Host/KritaPlugin/gmicqttoolplugin.h    | 15 +++++-----
 src/Host/KritaPlugin/gmicqttoolplugin.json |  9 ++++++
 src/Host/KritaPlugin/host.cpp              |  2 +-
 5 files changed, 53 insertions(+), 15 deletions(-)
 create mode 100644 src/Host/KritaPlugin/gmicqttoolplugin.json

diff --git a/CMakeLists.txt b/CMakeLists.txt
index ce0ccff..30aa10d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -546,17 +546,35 @@ elseif (${GMIC_QT_HOST} STREQUAL "krita")
     install(TARGETS gmic_krita_qt RUNTIME DESTINATION bin)
 
 elseif (${GMIC_QT_HOST} STREQUAL "krita-plugin")
+    set(MIN_FRAMEWORKS_VERSION 5.44.0)
+
+    find_package(ECM 5.22 REQUIRED NOMODULE)
+    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${ECM_MODULE_PATH} ${ECM_KDE_MODULE_DIR})
+
+    include(KDEInstallDirs)
+    include(KDECMakeSettings)
+
+    if (ANDROID)
+        set (KRITA_PLUGIN_INSTALL_DIR ${LIB_INSTALL_DIR})
+    else()
+        set (KRITA_PLUGIN_INSTALL_DIR ${LIB_INSTALL_DIR}/kritaplugins)
+    endif()
+
+    find_package(KF5 ${MIN_FRAMEWORKS_VERSION} REQUIRED COMPONENTS
+        CoreAddons
+    )
+
     message(STATUS "Looking for Krita QMic libraries in: ${CMAKE_PREFIX_PATH}")
 
     find_library(KIS_IMAGE_INTERFACE_LIBRARY
-      NAMES kisimageinterface
+      NAMES kritaqmicinterface
       REQUIRED)
 
     find_path(KIS_IMAGE_INTERFACE_DIR
-      NAMES KritaGmicPluginInterface.h
+      NAMES kis_qmic_plugin_interface.h
       REQUIRED)
 
-    set_package_properties(kisimageinterface PROPERTIES
+    set_package_properties(kritaqmicinterface PROPERTIES
                            URL "http://www.krita.org"
                            DESCRIPTION "Krita GMic core library"
     )
@@ -564,19 +582,20 @@ elseif (${GMIC_QT_HOST} STREQUAL "krita-plugin")
     set (gmic_qt_SRCS ${gmic_qt_SRCS} src/Host/KritaPlugin/host.cpp src/Host/KritaPlugin/gmicqttoolplugin.cpp)
     set (gmic_qt_SRCS ${gmic_qt_SRCS} )
     add_definitions(-DGMIC_HOST=krita-plugin)
-    add_library(gmic_krita_qt MODULE ${gmic_qt_SRCS} ${gmic_qt_QRC} ${qmic_qt_QM})
+    add_library(krita_gmic_qt MODULE ${gmic_qt_SRCS} ${gmic_qt_QRC} ${qmic_qt_QM})
     target_include_directories(
-      gmic_krita_qt
+      krita_gmic_qt
       PUBLIC
       ${KIS_IMAGE_INTERFACE_DIR}
     )
     target_link_libraries(
-      gmic_krita_qt
+      krita_gmic_qt
       PRIVATE
       ${gmic_qt_LIBRARIES}
       ${KIS_IMAGE_INTERFACE_LIBRARY}
+      KF5::CoreAddons
       )
-    install(TARGETS gmic_krita_qt LIBRARY DESTINATION bin) # plugin
+    install(TARGETS krita_gmic_qt DESTINATION ${KRITA_PLUGIN_INSTALL_DIR}) # plugin
 
 elseif (${GMIC_QT_HOST} STREQUAL "none")
 
diff --git a/src/Host/KritaPlugin/gmicqttoolplugin.cpp b/src/Host/KritaPlugin/gmicqttoolplugin.cpp
index 012c783..ad1e912 100644
--- a/src/Host/KritaPlugin/gmicqttoolplugin.cpp
+++ b/src/Host/KritaPlugin/gmicqttoolplugin.cpp
@@ -37,6 +37,13 @@
 #include "Widgets/LanguageSelectionWidget.h"
 #include "gmic_qt.h"
 
+#include "kpluginfactory.h"
+
+K_PLUGIN_FACTORY_WITH_JSON(KritaGmicPluginFactory, "gmicqttoolplugin.json", registerPlugin<KritaGmicPlugin>();)
+
+KritaGmicPlugin::KritaGmicPlugin(QObject *parent, const QVariantList &)
+    : QObject(parent) {}
+
 int KritaGmicPlugin::launch(std::shared_ptr<KisImageInterface> i,
                             bool headless) {
   disableInputMode(GmicQt::NoInput);
@@ -126,3 +133,5 @@ int KritaGmicPlugin::launch(std::shared_ptr<KisImageInterface> i,
 
   return r;
 }
+
+#include "gmicqttoolplugin.moc"
diff --git a/src/Host/KritaPlugin/gmicqttoolplugin.h b/src/Host/KritaPlugin/gmicqttoolplugin.h
index 043e362..866c15f 100644
--- a/src/Host/KritaPlugin/gmicqttoolplugin.h
+++ b/src/Host/KritaPlugin/gmicqttoolplugin.h
@@ -31,20 +31,21 @@
 #include <QVector>
 #include <memory>
 
-#include "kis_image_interface.h"
-#include "KritaGmicPluginInterface.h"
+#include "kis_qmic_interface.h"
+#include "kis_qmic_plugin_interface.h"
 
 extern QVector<KisQMicImageSP> sharedMemorySegments;
 extern std::shared_ptr<KisImageInterface> iface;
 
-class KritaGmicPlugin : public QObject, public KritaGmicPluginInterface {
+class KritaGmicPlugin : public QObject, public KisQmicPluginInterface {
   Q_OBJECT
-
-  Q_PLUGIN_METADATA(IID KRITA_GMIC_PLUGIN_INTERFACE_IID)
-  Q_INTERFACES(KritaGmicPluginInterface)
+  Q_INTERFACES(KisQmicPluginInterface)
 
 public:
-  int launch(std::shared_ptr<KisImageInterface> iface, bool headless = false) override;
+  KritaGmicPlugin(QObject *parent, const QVariantList &);
+
+  int launch(std::shared_ptr<KisImageInterface> iface,
+                 bool headless = false) override;
 };
 
 #endif
diff --git a/src/Host/KritaPlugin/gmicqttoolplugin.json b/src/Host/KritaPlugin/gmicqttoolplugin.json
new file mode 100644
index 0000000..4639d5e
--- /dev/null
+++ b/src/Host/KritaPlugin/gmicqttoolplugin.json
@@ -0,0 +1,9 @@
+{
+    "Id": "GMic-Qt Krita Plugin",
+    "Type": "Service",
+    "X-KDE-Library": "gmic_krita_qt",
+    "X-KDE-ServiceTypes": [
+        "Krita/GMic"
+    ],
+    "X-Krita-Version": "28"
+}
diff --git a/src/Host/KritaPlugin/host.cpp b/src/Host/KritaPlugin/host.cpp
index ffa5283..4ff84e6 100644
--- a/src/Host/KritaPlugin/host.cpp
+++ b/src/Host/KritaPlugin/host.cpp
@@ -33,7 +33,7 @@
 #include "Host/host.h"
 #include "gmic.h"
 #include "gmic_qt.h"
-#include "kis_image_interface.h"
+#include "kis_qmic_interface.h"
 
 /*
  * No messages are sent in the plugin version of GMic.
-- 
2.30.0

