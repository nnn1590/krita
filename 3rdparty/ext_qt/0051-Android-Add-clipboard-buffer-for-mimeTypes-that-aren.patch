From b10def35c7ea99ba977dd8f76407862e3836f51e Mon Sep 17 00:00:00 2001
From: Sharaf Zaman <sharafzaz121@gmail.com>
Date: Thu, 8 Oct 2020 13:35:02 +0000
Subject: [PATCH] Android: Add clipboard buffer for mimeTypes that aren't
 supported

Paste: If the data exists in clipboard, we use that. If
the data doesn't exist, we check if it is local buffer.

Copy: If we set the data and it isn't a compatible mimeType,
then we clear the system clipboard and store the data on
app's buffer.
---
 .../org/qtproject/qt5/android/QtNative.java   | 11 +++++++++
 .../platforms/android/androidjniclipboard.cpp | 11 +++++++++
 .../platforms/android/androidjniclipboard.h   |  2 ++
 .../android/qandroidplatformclipboard.cpp     | 24 +++++++++++++++----
 .../android/qandroidplatformclipboard.h       |  3 +++
 5 files changed, 46 insertions(+), 5 deletions(-)

diff --git a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
index 3ad14c5f47..f4f8914d5a 100644
--- a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
+++ b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
@@ -923,6 +923,9 @@ public class QtNative
     private static void clearClipData()
     {
         m_usePrimaryClip = false;
+        if (m_clipboardManager != null) {
+            m_clipboardManager.clearPrimaryClip();
+        }
     }
     private static void setClipboardText(String text)
     {
@@ -997,6 +1000,14 @@ public class QtNative
         }
     }
 
+    private static boolean hasClipData()
+    {
+        if (m_clipboardManager != null) {
+            return m_clipboardManager.hasPrimaryClip();
+        }
+        return false;
+    }
+
     private static void setClipboardHtml(String text, String html)
     {
         if (m_clipboardManager != null) {
diff --git a/src/plugins/platforms/android/androidjniclipboard.cpp b/src/plugins/platforms/android/androidjniclipboard.cpp
index 671d0b56d0..ec52eaf77a 100644
--- a/src/plugins/platforms/android/androidjniclipboard.cpp
+++ b/src/plugins/platforms/android/androidjniclipboard.cpp
@@ -123,6 +123,17 @@ namespace QtAndroidClipboard
     {
         m_manager->emitChanged(QClipboard::Clipboard);
     }
+
+    bool hasClipboardMimeData()
+    {
+        return QJNIObjectPrivate::callStaticMethod<jboolean>(applicationClass(), "hasClipData");
+    }
+
+    void clearClipboardMimeData()
+    {
+        QJNIObjectPrivate::callStaticMethod<void>(applicationClass(), "clearClipData");
+    }
+
 }
 
 QT_END_NAMESPACE
diff --git a/src/plugins/platforms/android/androidjniclipboard.h b/src/plugins/platforms/android/androidjniclipboard.h
index e83e6b555c..1295438813 100644
--- a/src/plugins/platforms/android/androidjniclipboard.h
+++ b/src/plugins/platforms/android/androidjniclipboard.h
@@ -54,6 +54,8 @@ namespace QtAndroidClipboard
     void setClipboardMimeData(QMimeData *data);
     QMimeData *getClipboardMimeData();
     void onClipboardDataChanged(JNIEnv */*env*/, jobject /*thiz*/);
+    bool hasClipboardMimeData();
+    void clearClipboardMimeData();
     // Clipboard support
 }
 
diff --git a/src/plugins/platforms/android/qandroidplatformclipboard.cpp b/src/plugins/platforms/android/qandroidplatformclipboard.cpp
index 17dfe27d12..d3a6cd1b0e 100644
--- a/src/plugins/platforms/android/qandroidplatformclipboard.cpp
+++ b/src/plugins/platforms/android/qandroidplatformclipboard.cpp
@@ -44,6 +44,7 @@
 QT_BEGIN_NAMESPACE
 
 QAndroidPlatformClipboard::QAndroidPlatformClipboard()
+    : m_mimeData(nullptr)
 {
     QtAndroidClipboard::setClipboardManager(this);
 }
@@ -54,15 +55,28 @@ QMimeData *QAndroidPlatformClipboard::mimeData(QClipboard::Mode mode)
     Q_ASSERT(supportsMode(mode));
     QMimeData *data = QtAndroidClipboard::getClipboardMimeData();
     data->setParent(this);
-    return data;
+
+    // this means clipboard is empty, so data could possibly be in m_mimeData
+    if (!QtAndroidClipboard::hasClipboardMimeData() && m_mimeData) {
+        return m_mimeData.data();
+    } else {
+        m_mimeData.reset();
+        return data;
+    }
 }
 
 void QAndroidPlatformClipboard::setMimeData(QMimeData *data, QClipboard::Mode mode)
 {
-    if (data && supportsMode(mode))
-        QtAndroidClipboard::setClipboardMimeData(data);
-    if (data != 0)
-        data->deleteLater();
+    if (data && supportsMode(mode) && m_mimeData.data() != data) {
+        if (data->hasHtml() || data->hasText() || data->hasUrls()) {
+            QtAndroidClipboard::setClipboardMimeData(data);
+            data->deleteLater();
+        } else {
+            m_mimeData.reset(data);
+            QtAndroidClipboard::clearClipboardMimeData();
+            emitChanged(mode);
+        }
+    }
 }
 
 bool QAndroidPlatformClipboard::supportsMode(QClipboard::Mode mode) const
diff --git a/src/plugins/platforms/android/qandroidplatformclipboard.h b/src/plugins/platforms/android/qandroidplatformclipboard.h
index 3ed9d323f8..d7d319f504 100644
--- a/src/plugins/platforms/android/qandroidplatformclipboard.h
+++ b/src/plugins/platforms/android/qandroidplatformclipboard.h
@@ -54,6 +54,9 @@ public:
     QMimeData *mimeData(QClipboard::Mode mode = QClipboard::Clipboard) override;
     void setMimeData(QMimeData *data, QClipboard::Mode mode = QClipboard::Clipboard) override;
     bool supportsMode(QClipboard::Mode mode) const override;
+
+private:
+    QScopedPointer<QMimeData> m_mimeData;
 };
 
 QT_END_NAMESPACE
-- 
2.28.0

