From c900904bf64a4e8345c8c2bb8aec3e041330c26e Mon Sep 17 00:00:00 2001
From: Sharaf Zaman <sharafzaz121@gmail.com>
Date: Thu, 5 Nov 2020 11:13:49 +0000
Subject: [PATCH] Android: Use processOpenModeFlags to get right OpenMode

processOpenModeFlags handles flags individually so, we get the right
behavior which is consistent with rest of the Qt. Previously using
WriteOnly would only pass the flag "w" to Android. Now it correctly
handles the additional Truncate flag.
---
 .../src/org/qtproject/qt5/android/QtNative.java |  3 ++-
 .../android/androidcontentfileengine.cpp        | 17 +++++++++++++----
 2 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
index 8c8ed6f4c9..b56a8642cf 100644
--- a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
+++ b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
@@ -238,9 +238,10 @@ public class QtNative
             m_parcelFileDescriptors.put(fdDesc.getFd(), fdDesc);
             return fdDesc.getFd();
         } catch (FileNotFoundException e) {
+            e.printStackTrace();
             return error;
         } catch (IllegalArgumentException e) {
-            Log.e(QtTAG, "openFdForContentUrl(): Invalid Uri");
+            Log.e(QtTAG, "openFdForContentUrl(): Invalid Uri: " + e);
             return error;
         }
     }
diff --git a/src/plugins/platforms/android/androidcontentfileengine.cpp b/src/plugins/platforms/android/androidcontentfileengine.cpp
index 9a743f3946..18de8b0e59 100644
--- a/src/plugins/platforms/android/androidcontentfileengine.cpp
+++ b/src/plugins/platforms/android/androidcontentfileengine.cpp
@@ -54,15 +54,23 @@ AndroidContentFileEngine::AndroidContentFileEngine(const QString &f)
 bool AndroidContentFileEngine::open(QIODevice::OpenMode openMode)
 {
     QString openModeStr;
-    if (openMode & QFileDevice::ReadOnly) {
+    ProcessOpenModeResult res = processOpenModeFlags(openMode);
+    if (!res.ok) {
+        setError(QFileDevice::OpenError, res.error);
+        return false;
+    }
+
+    // if Truncate flag is set we have to set 'r' as well, else we get inconsistent results.
+    if ((res.openMode & QFileDevice::ReadOnly) || (res.openMode & QFileDevice::Truncate)) {
         openModeStr += QLatin1Char('r');
     }
-    if (openMode & QFileDevice::WriteOnly) {
+    if (res.openMode & QFileDevice::WriteOnly) {
         openModeStr += QLatin1Char('w');
     }
-    if (openMode & QFileDevice::Truncate) {
+    if (res.openMode & QFileDevice::Truncate) {
         openModeStr += QLatin1Char('t');
-    } else if (openMode & QFileDevice::Append) {
+    } else if (res.openMode & QFileDevice::Append) {
+        qWarning("Android doesn't support 'a' mode when accessing a ContentProvider");
         openModeStr += QLatin1Char('a');
     }
 
@@ -74,6 +82,7 @@ bool AndroidContentFileEngine::open(QIODevice::OpenMode openMode)
         QJNIObjectPrivate::fromString(openModeStr).object());
 
     if (fd < 0) {
+        setError(QFileDevice::OpenError, QLatin1String("The file could not be opened."));
         return false;
     }
 
-- 
2.30.0

