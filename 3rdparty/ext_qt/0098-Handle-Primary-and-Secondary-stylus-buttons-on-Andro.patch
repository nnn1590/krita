From 87e7c56efb62aa990c54ac795fa04948a4e51fdd Mon Sep 17 00:00:00 2001
From: Sharaf Zaman <sharafzaz121@gmail.com>
Date: Thu, 10 Sep 2020 10:46:57 +0000
Subject: [PATCH 5/5] Handle Primary and Secondary stylus buttons on Android

Change-Id: Ibe4fcae58cf994c92fe7dcc525d5daa3699996ca
---
 .../platforms/android/androidjniinput.cpp      | 18 ++++++++++++------
 .../platforms/android/androidjniinput.h        | 10 ++++++++++
 2 files changed, 22 insertions(+), 6 deletions(-)

diff --git a/src/plugins/platforms/android/androidjniinput.cpp b/src/plugins/platforms/android/androidjniinput.cpp
index deb30e404a..313407575e 100644
--- a/src/plugins/platforms/android/androidjniinput.cpp
+++ b/src/plugins/platforms/android/androidjniinput.cpp
@@ -63,6 +63,7 @@ namespace QtAndroidInput
     static bool m_ignoreMouseEvents = false;
     static bool m_softwareKeyboardVisible = false;
     static QRect m_softwareKeyboardRect;
+    static int m_previousButtons = Qt::NoButton;
 
     static QList<QWindowSystemInterface::TouchPoint> m_touchPoints;
 
@@ -357,17 +358,22 @@ namespace QtAndroidInput
         // when action == ACTION_UP (1) it's a release; otherwise we say which button is pressed
         Qt::MouseButtons buttons = Qt::NoButton;
         switch (action) {
-        case 1:     // ACTION_UP
-        case 212:   // stylus release while side-button held on Galaxy Note 4
+        case ACTION_UP:
             buttons = Qt::NoButton;
             break;
-        default:    // action is press or drag
-            if (buttonState == 0)
+        default:    // for now only ACTION_DOWN
+            if (buttonState == NO_BUTTON)
                 buttons = Qt::LeftButton;
-            else // 2 means RightButton
-                buttons = Qt::MouseButtons(buttonState);
+            else if (buttonState == BUTTON_STYLUS_PRIMARY)
+                buttons = Qt::MiddleButton;
+            else if (buttonState == BUTTON_STYLUS_SECONDARY)
+                buttons = Qt::RightButton;
             break;
         }
+        if (m_previousButtons != buttons && m_previousButtons != Qt::NoButton) {
+            buttons = Qt::NoButton;
+        }
+        m_previousButtons = buttons;
 
 #ifdef QT_DEBUG_ANDROID_STYLUS
         qDebug() << action << pointerType << buttonState << '@' << x << y << "pressure" << pressure << ": buttons" << buttons;
diff --git a/src/plugins/platforms/android/androidjniinput.h b/src/plugins/platforms/android/androidjniinput.h
index cc3070c4aa..8f32485193 100644
--- a/src/plugins/platforms/android/androidjniinput.h
+++ b/src/plugins/platforms/android/androidjniinput.h
@@ -48,6 +48,16 @@ QT_BEGIN_NAMESPACE
 
 namespace QtAndroidInput
 {
+    enum Actions {
+        ACTION_DOWN = 0,
+        ACTION_UP = 1,
+    };
+    enum ButtonStates {
+        NO_BUTTON = 0,
+        BUTTON_STYLUS_PRIMARY = 32,     // 0x00000020
+        BUTTON_STYLUS_SECONDARY = 64,   // 0x00000040
+    };
+
     // Software keyboard support
     void showSoftwareKeyboard(int top, int left, int width, int height, int inputHints, int enterKeyType);
     void resetSoftwareKeyboard();
-- 
2.28.0

