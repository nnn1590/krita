From ada45cc4f5e2ac61992fe10f4d22899971c07793 Mon Sep 17 00:00:00 2001
From: Sharaf Zaman <sharafzaz121@gmail.com>
Date: Thu, 10 Sep 2020 10:42:31 +0000
Subject: [PATCH 4/5] Pass keyboard modifiers for mouse and tablet events

[Android] Pass keyboard modifiers for tablet and mouse events

Change-Id: I79238d8454d8e10303af794625dcc704642f99e5
---
 .../org/qtproject/qt5/android/QtNative.java   | 18 ++++++------
 .../platforms/android/androidjniinput.cpp     | 28 +++++++++++--------
 2 files changed, 25 insertions(+), 21 deletions(-)

diff --git a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
index ed599a4369..81bdb83a65 100644
--- a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
+++ b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
@@ -495,7 +495,7 @@ public class QtNative
             float tiltY = (float) Math.toDegrees(Math.cos(orientation) * tiltRot);
             tabletEvent(id, event.getDeviceId(), event.getEventTime(), event.getAction(), pointerType,
                 event.getButtonState(), event.getX(), event.getY(), event.getPressure(), tiltX, tiltY,
-                (float) Math.toDegrees(orientation));
+                (float) Math.toDegrees(orientation), event.getMetaState());
         } else {
             touchBegin(id);
             for (int i = 0; i < event.getPointerCount(); ++i) {
@@ -545,23 +545,23 @@ public class QtNative
     {
         switch (event.getActionMasked()) {
             case MotionEvent.ACTION_UP:
-                mouseUp(id, (int) event.getX(), (int) event.getY());
+                mouseUp(id, (int) event.getX(), (int) event.getY(), event.getMetaState());
                 break;
 
             case MotionEvent.ACTION_DOWN:
-                mouseDown(id, (int) event.getX(), (int) event.getY());
+                mouseDown(id, (int) event.getX(), (int) event.getY(), event.getMetaState());
                 m_oldx = (int) event.getX();
                 m_oldy = (int) event.getY();
                 break;
             case MotionEvent.ACTION_HOVER_MOVE:
             case MotionEvent.ACTION_MOVE:
                 if (event.getToolType(0) == MotionEvent.TOOL_TYPE_MOUSE) {
-                    mouseMove(id, (int) event.getX(), (int) event.getY());
+                    mouseMove(id, (int) event.getX(), (int) event.getY(), event.getMetaState());
                 } else {
                     int dx = (int) (event.getX() - m_oldx);
                     int dy = (int) (event.getY() - m_oldy);
                     if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {
-                        mouseMove(id, (int) event.getX(), (int) event.getY());
+                        mouseMove(id, (int) event.getX(), (int) event.getY(), event.getMetaState());
                         m_oldx = (int) event.getX();
                         m_oldy = (int) event.getY();
                     }
@@ -1043,9 +1043,9 @@ public class QtNative
     // screen methods
 
     // pointer methods
-    public static native void mouseDown(int winId, int x, int y);
-    public static native void mouseUp(int winId, int x, int y);
-    public static native void mouseMove(int winId, int x, int y);
+    public static native void mouseDown(int winId, int x, int y, int modifier);
+    public static native void mouseUp(int winId, int x, int y, int modifiers);
+    public static native void mouseMove(int winId, int x, int y, int modifier);
     public static native void mouseWheel(int winId, int x, int y, float hdelta, float vdelta);
     public static native void touchBegin(int winId);
     public static native void touchAdd(int winId, int pointerId, int action, boolean primary, int x, int y, float major, float minor, float rotation, float pressure);
@@ -1055,7 +1055,7 @@ public class QtNative
 
     // tablet methods
     public static native boolean isTabletEventSupported();
-    public static native void tabletEvent(int winId, int deviceId, long time, int action, int pointerType, int buttonState, float x, float y, float pressure, float tiltX, float tiltY, float rotation);
+    public static native void tabletEvent(int winId, int deviceId, long time, int action, int pointerType, int buttonState, float x, float y, float pressure, float tiltX, float tiltY, float rotation, int modifiers);
     // tablet methods
 
     // keyboard methods
diff --git a/src/plugins/platforms/android/androidjniinput.cpp b/src/plugins/platforms/android/androidjniinput.cpp
index 864744bf49..deb30e404a 100644
--- a/src/plugins/platforms/android/androidjniinput.cpp
+++ b/src/plugins/platforms/android/androidjniinput.cpp
@@ -59,6 +59,7 @@ using namespace QtAndroid;
 
 namespace QtAndroidInput
 {
+    static Qt::KeyboardModifiers mapAndroidModifiers(jint modifiers);
     static bool m_ignoreMouseEvents = false;
     static bool m_softwareKeyboardVisible = false;
     static QRect m_softwareKeyboardRect;
@@ -132,7 +133,7 @@ namespace QtAndroidInput
                                                   anchor.x(), anchor.y(), rtl);
     }
 
-    static void mouseDown(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint x, jint y)
+    static void mouseDown(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint x, jint y, jint modifier)
     {
         if (m_ignoreMouseEvents)
             return;
@@ -148,10 +149,11 @@ namespace QtAndroidInput
         QWindowSystemInterface::handleMouseEvent(tlw,
                                                  localPos,
                                                  globalPos,
-                                                 Qt::MouseButtons(Qt::LeftButton));
+                                                 Qt::MouseButtons(Qt::LeftButton),
+                                                 mapAndroidModifiers(modifier));
     }
 
-    static void mouseUp(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint x, jint y)
+    static void mouseUp(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint x, jint y, jint modifiers)
     {
         QPoint globalPos(x,y);
         QWindow *tlw = m_mouseGrabber.data();
@@ -164,12 +166,12 @@ namespace QtAndroidInput
             localPos = platformWindow ? platformWindow->mapFromGlobal(globalPos) : globalPos;
         }
         QWindowSystemInterface::handleMouseEvent(tlw, localPos, globalPos
-                                                , Qt::MouseButtons(Qt::NoButton));
+                                                , Qt::MouseButtons(Qt::NoButton), mapAndroidModifiers(modifiers));
         m_ignoreMouseEvents = false;
         m_mouseGrabber = 0;
     }
 
-    static void mouseMove(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint x, jint y)
+    static void mouseMove(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint x, jint y, jint modifier)
     {
         if (m_ignoreMouseEvents)
             return;
@@ -187,7 +189,8 @@ namespace QtAndroidInput
         QWindowSystemInterface::handleMouseEvent(tlw,
                                                  localPos,
                                                  globalPos,
-                                                 Qt::MouseButtons(m_mouseGrabber ? Qt::LeftButton : Qt::NoButton));
+                                                 Qt::MouseButtons(m_mouseGrabber ? Qt::LeftButton : Qt::NoButton),
+                                                 mapAndroidModifiers(modifier));
     }
 
     static void mouseWheel(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint x, jint y, jfloat hdelta, jfloat vdelta)
@@ -323,7 +326,8 @@ namespace QtAndroidInput
     }
 
     static void tabletEvent(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint deviceId, jlong time, jint action,
-        jint pointerType, jint buttonState, jfloat x, jfloat y, jfloat pressure, jfloat tiltX, jfloat tiltY, jfloat rotation)
+        jint pointerType, jint buttonState, jfloat x, jfloat y, jfloat pressure, jfloat tiltX, jfloat tiltY, jfloat rotation,
+        jint modifiers)
     {
 #if QT_CONFIG(tabletevent)
         QPointF globalPosF(x, y);
@@ -371,7 +375,7 @@ namespace QtAndroidInput
 
         QWindowSystemInterface::handleTabletEvent(tlw, ulong(time),
             localPos, globalPosF, QTabletEvent::Stylus, pointerType,
-            buttons, pressure, tiltX, tiltY, 0., rotation, 0, deviceId, Qt::NoModifier);
+            buttons, pressure, tiltX, tiltY, 0., rotation, 0, deviceId, mapAndroidModifiers(modifiers));
 #endif // QT_CONFIG(tabletevent)
     }
 
@@ -870,13 +874,13 @@ namespace QtAndroidInput
         {"touchBegin","(I)V",(void*)touchBegin},
         {"touchAdd","(IIIZIIFFFF)V",(void*)touchAdd},
         {"touchEnd","(II)V",(void*)touchEnd},
-        {"mouseDown", "(III)V", (void *)mouseDown},
-        {"mouseUp", "(III)V", (void *)mouseUp},
-        {"mouseMove", "(III)V", (void *)mouseMove},
+        {"mouseDown", "(IIII)V", (void *)mouseDown},
+        {"mouseUp", "(IIII)V", (void *)mouseUp},
+        {"mouseMove", "(IIII)V", (void *)mouseMove},
         {"mouseWheel", "(IIIFF)V", (void *)mouseWheel},
         {"longPress", "(III)V", (void *)longPress},
         {"isTabletEventSupported", "()Z", (void *)isTabletEventSupported},
-        {"tabletEvent", "(IIJIIIFFFFFF)V", (void *)tabletEvent},
+        {"tabletEvent", "(IIJIIIFFFFFFI)V", (void *)tabletEvent},
         {"keyDown", "(IIIZ)V", (void *)keyDown},
         {"keyUp", "(IIIZ)V", (void *)keyUp},
         {"keyboardVisibilityChanged", "(Z)V", (void *)keyboardVisibilityChanged},
-- 
2.28.0

